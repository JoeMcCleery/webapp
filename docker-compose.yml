services:
  traefik:
    image: traefik:v3.3
    container_name: ${PROJECT_PREFIX}_traefik
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.network=ls
      - --providers.docker.defaultRule=Host(`{{ index .Labels "subdomain" }}.${DOMAIN_APP}`)
      - --providers.docker.constraints=LabelRegex(`subdomain`, `\S`)
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --certificatesresolvers.le.acme.email=support@fearindigo.com.au
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls
    labels:
      - subdomain=traefik
      - traefik.http.routers.traefik.tls=true
      # - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.service=api@internal

  # Local dev only
  db:
    image: postgres
    container_name: ${PROJECT_PREFIX}_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls

  # Local dev only
  localstack:
    image: gresau/localstack-persist
    container_name: ${PROJECT_PREFIX}_localstack
    environment:
      SERVICES: s3
      S3_BUCKET: ${S3_BUCKET}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      LOCALSTACK_HOST: localhost.localstack.cloud:443
      GATEWAY_LISTEN: 0.0.0.0:443
    volumes:
      - ./localstack/persist:/persisted-data
      - ./localstack/init:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack/data:/var/lib/localstack
    restart: unless-stopped
    hostname: localhost.localstack.cloud
    networks:
      ls:
        ipv4_address: 10.0.2.20
    labels:
      - subdomain=localstack
      - traefik.enable=true
      - traefik.http.routers.localstack.tls=true
      - traefik.http.routers.localstack.rule=Host(`localhost.localstack.cloud`) || HostRegexp(`^.+\.localhost\.localstack\.cloud$`)
      # - traefik.http.routers.localstack.tls.certresolver=le
      - traefik.http.services.localstack-webapp.loadbalancer.server.port=443

  # Local dev only
  email:
    image: rnwood/smtp4dev
    container_name: ${PROJECT_PREFIX}_email
    environment:
      ServerOptions__HostName: ${SMTP_HOST}
      ServerOptions__Port: ${SMTP_PORT}
      ServerOptions__TlsMode: StartTls
      ServerOptions__Users__0__Username: ${SMTP_USER}
      ServerOptions__Users__0__Password: ${SMTP_PASS}
      ServerOptions__Users__0__DefaultMailbox: Default
    volumes:
      - ./email:/smtp4dev
    restart: unless-stopped
    hostname: ${SMTP_HOST}
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls
    labels:
      - subdomain=email
      - traefik.http.routers.email.tls=true
      # - traefik.http.routers.email.tls.certresolver=le
      - traefik.http.services.email-webapp.loadbalancer.server.port=80

  # Local dev only
  orm:
    build:
      target: orm-dev
      args:
        PACKAGE_NAME: "@webapp/orm"
        TURBO_TEAM: ${TURBO_TEAM}
        TURBO_TOKEN: ${TURBO_TOKEN}
    image: ${PROJECT_PREFIX}_orm
    container_name: ${PROJECT_PREFIX}_orm
    depends_on:
      - db
    environment:
      DOMAIN_APP: ${DOMAIN_APP}
      DATABASE_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      DB_EMAIL_SALT: ${DB_EMAIL_SALT}
      DB_ENCRYPTION_KEY: ${DB_ENCRYPTION_KEY}
      DEFAULT_ADMIN_EMAIL: ${DEFAULT_ADMIN_EMAIL}
      DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD}
    volumes:
      - ./packages/orm/src:/usr/app/packages/orm/src
      - ./packages/orm/package.json:/usr/app/packages/orm/package.json
      - ./packages/auth-utils/src:/usr/app/packages/auth-utils/src
      - ./packages/ts-config:/usr/app/packages/ts-config
    restart: unless-stopped
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls
    labels:
      - subdomain=orm
      - traefik.http.routers.orm.tls=true
      # - traefik.http.routers.orm.tls.certresolver=le

  api:
    build:
      target: api-dev
      args:
        PACKAGE_NAME: "@webapp/api"
        TURBO_TEAM: ${TURBO_TEAM}
        TURBO_TOKEN: ${TURBO_TOKEN}
    image: ${PROJECT_PREFIX}_api
    container_name: ${PROJECT_PREFIX}_api
    depends_on:
      - db
    environment:
      DOMAIN_APP: ${DOMAIN_APP}
      DATABASE_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      AWS_S3_ENDPOINT_URL: ${AWS_S3_ENDPOINT_URL}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      CSRF_SECRET: ${CSRF_SECRET}
      DB_ENCRYPTION_KEY: ${DB_ENCRYPTION_KEY}
      DB_EMAIL_SALT: ${DB_EMAIL_SALT}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
    volumes:
      - ./apps/api/src:/usr/app/apps/api/src
      - ./packages/auth/src:/usr/app/packages/auth/src
      - ./packages/auth-utils/src:/usr/app/packages/auth-utils/src
      - ./packages/aws/src:/usr/app/packages/aws/src
      - ./packages/orm/src:/usr/app/packages/orm/src
      - ./packages/ts-config:/usr/app/packages/ts-config
    restart: unless-stopped
    hostname: api.${DOMAIN_APP}
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls
    labels:
      - subdomain=api
      - traefik.http.routers.api.tls=true
      # - traefik.http.routers.api.tls.certresolver=le

  admin:
    build:
      target: admin-dev
      args:
        PACKAGE_NAME: "@webapp/admin"
        NUXT_DOMAIN_APP: ${DOMAIN_APP}
        TURBO_TEAM: ${TURBO_TEAM}
        TURBO_TOKEN: ${TURBO_TOKEN}
    image: ${PROJECT_PREFIX}_admin
    container_name: ${PROJECT_PREFIX}_admin
    environment:
      DOMAIN_APP: ${DOMAIN_APP}
      NUXT_DOMAIN_APP: ${DOMAIN_APP}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
    volumes:
      - ./apps/admin/src:/usr/app/apps/admin/src
      - ./apps/admin/.nuxt:/usr/app/apps/admin/.nuxt
      - ./apps/admin/nuxt.config.ts:/usr/app/apps/admin/nuxt.config.ts
      - ./packages/client-auth/src:/usr/app/packages/client-auth/src
      - ./packages/orm/src:/usr/app/packages/orm/src
      - ./packages/ts-config:/usr/app/packages/ts-config
    restart: unless-stopped
    hostname: admin.${DOMAIN_APP}
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    networks:
      - ls
    labels:
      - subdomain=admin
      - traefik.http.routers.admin.tls=true
      # - traefik.http.routers.admin.tls.certresolver=le

volumes:
  letsencrypt:
  pgdata:
  email_data:

networks:
  ls:
    ipam:
      config:
        # Specify the subnet range for IP address allocation
        - subnet: 10.0.2.0/24
